<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="Content-Language" content="en" />
    <link rel="stylesheet" type="text/css" href="../s.css" />
    <meta name="citation_title" content="Optimized Client-Server Distribution of Ajax Web Applications" />
    <meta name="citation_author" content="Bouaziz, Mehdi" />
    <meta name="citation_publication_date" content="2009/09" />
    <meta name="citation_pdf_url" content="http://www.bouaziz.me/p/Bouaziz-MLstate09.pdf" />
    <title>Optimized Client-Server Distribution of Ajax Web Applications - Mehdi Bouaziz</title>
  </head>
  <body class="pub">
    <div class="otherlangs">
      <ul>
        <li>
          <a href="Bouaziz-MLstate09.fr.htm" rel="alternate" hreflang="fr" xml:lang="fr" lang="fr">Version française</a>
        </li>
      </ul>
    </div>
    <div class="page">
      <div class="content">
        <h2 class="citation_author">Mehdi Bouaziz</h2>
        <h1 class="citation_title">Optimized Client-Server Distribution of Ajax Web Applications</h1>
        <h3>internship report, <a href="http://www.mlstate.com" class="place">MLstate</a>, September 2009</h3>
        <p>
          <ul class="bigarrows">
            <li><a href="Bouaziz-MLstate09.pdf">PDF</a>, 12 pages, 260 KB</li>
            <li><i>Abstract: </i>There is a new wave in modern web 2.0 development based on unified frameworks of data manipulation and server-side programming as well as client-side programming with a single language, instead of JavaScript used with another server-specific language. MLstate's approach uses a single, functional language, named OPA, that is compiled to server code, database code and client code, and regroups all the layers of the application.<br />
OPA compiler aims at doing all the logic of application functionality partitioning and security ensuring, allowing OPA developers not to focus and waste time on this complex and expensive work they were doing before. By automating these tasks, OPA get rid of sub-optimal partitioning and drastically reduce the cost of refactoring.<br />
In this paper, we describe the automation of client-server code partitioning and propose algorithms to optimize it, which should result in faster, more responding web applications.
  </li>
            <li>@techreport{Bouaziz-MLstate09,<br />  author = {Bouaziz, Mehdi},<br />  title = {Optimized Client-Server Distribution of Ajax Web Applications},<br />  year = {2009},<br />  month = {September},<br />  type = {internship report},<br />  url = {http://www.bouaziz.me/p/Bouaziz-MLstate09.pdf}<br />}</li>
          </ul>
        </p>
        <p class="footer center"><a href="../index.en.htm">Home</a> | <a href="../contact.en.htm">Contact</a> | <a href="../sitemap.en.htm">Site map</a></p>
        <p class="center" id="lastupdate">Last update: January 24, 2014</p>
      </div>
    </div>
  </body>
</html>
